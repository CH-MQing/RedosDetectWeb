id:null
正则表达式:null
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
id:1
正则表达式:^(a+)+$
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
攻击字符串："a"+"a"*32+" "
攻击是否成功：ATTACK_SUCCESS
攻击时间：1000
时间复杂度：EXPONENT
漏洞模式：NQ
漏洞位置：^►(▻a+◅)+◄$
漏洞原因：There is a nested quantifier node a+ in (a+)+.
------------------------
------------------------
攻击字符串："a"+"a"*32+"◎a◎"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1014
时间复杂度：EXPONENT
漏洞模式：NQ
漏洞位置：^►(▻a+◅)+◄$
漏洞原因：There is a nested quantifier node a+ in (a+)+.
------------------------
------------------------
攻击字符串："a"+"a"*32+"◎"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1014
时间复杂度：EXPONENT
漏洞模式：NQ
漏洞位置：^►(▻a+◅)+◄$
漏洞原因：There is a nested quantifier node a+ in (a+)+.
------------------------
------------------------
攻击字符串：""+"a"*5000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1014
时间复杂度：POLYNOMIAL
漏洞模式：SLQ_2
漏洞位置：Unable to locate Vulnerability position
漏洞原因：Unable to find Vulnerability source
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:2
正则表达式:^(\\w+)\\w+$
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
id:3
正则表达式:a+a+b
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
攻击字符串：""+"aa"*5000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1015
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串："a"+"aa"*5000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1013
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串：""+"aa"*5000+""
攻击是否成功：ATTACK_SUCCESS
攻击时间：1012
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串："a"+"aa"*5000+""
攻击是否成功：ATTACK_SUCCESS
攻击时间：1007
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串：""+"aa"*5000+" "
攻击是否成功：ATTACK_SUCCESS
攻击时间：1002
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串："a"+"aa"*5000+" "
攻击是否成功：ATTACK_SUCCESS
攻击时间：1013
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串：""+"aa"*5000+"◎"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1015
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串："a"+"aa"*5000+"◎"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1012
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
------------------------
攻击字符串：""+"a"*5000+"\u0000"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1002
时间复杂度：POLYNOMIAL
漏洞模式：SLQ2
漏洞位置：Unable to locate Vulnerability position
漏洞原因：Unable to find Vulnerability source
------------------------
------------------------
攻击字符串：""+"a"*5000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1015
时间复杂度：POLYNOMIAL
漏洞模式：SLQ_1
漏洞位置：Unable to locate Vulnerability position
漏洞原因：Unable to find Vulnerability source
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
