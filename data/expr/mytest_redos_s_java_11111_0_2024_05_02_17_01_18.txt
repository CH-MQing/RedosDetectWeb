id:null
正则表达式:null
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
并非ReDos,攻击字符串为空
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:1
正则表达式:^(a+)+$
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
编号：1
攻击字符串："a"+"a"*32+" "
攻击是否成功：ATTACK_SUCCESS
攻击时间：1008
时间复杂度：EXPONENT
漏洞模式：NQ
漏洞位置：^►(▻a+◅)+◄$
漏洞原因：There is a nested quantifier node a+ in (a+)+.
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:2
正则表达式:^(\\w+)\\w+$
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
并非ReDos,攻击字符串为空
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:3
正则表达式:^Set-Cookie:\\\\s*([^=]+)=([^;]+)
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
编号：1
攻击字符串："Set-Cookie:\\\\"+"s"*10000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1001
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：^Set-Cookie:\\\\▻s*◅(▻[^=]+◅)=([^;]+)
漏洞原因：β1 = s* β2 = [^=]+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:4
正则表达式:^Set-Cookie:(\\w+)a(\\w+)$
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
并非ReDos,攻击字符串为空
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:5
正则表达式:a+a+b
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
编号：1
攻击字符串：""+"aa"*5000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1004
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：▻a+a+◅b
漏洞原因：β1 = a+ β2 = a+ (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:6
正则表达式:\u003cli(.*?)\u003e(.*?)\u003c\\\/li\u003e
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
编号：1
攻击字符串："<li"+">"*10000+"@"
攻击是否成功：ATTACK_SUCCESS
攻击时间：1005
时间复杂度：POLYNOMIAL
漏洞模式：POA
漏洞位置：<li(▻.*?◅)▻>◅(▻.*?◅)<\\\/li>
漏洞原因：β1 = .* β2 = >.* (β1.followLast) ∩ (β2.first) ≠ ∅
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:7
正则表达式:a
是否是ReDos漏洞：RESULT-FALSE
攻击字符串如下:
并非ReDos,攻击字符串为空
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
id:8
正则表达式:^(a+)+b
是否是ReDos漏洞：RESULT-TRUE
攻击字符串如下:
------------------------
编号：1
攻击字符串："a"+"a"*32+""
攻击是否成功：ATTACK_SUCCESS
攻击时间：1005
时间复杂度：EXPONENT
漏洞模式：NQ
漏洞位置：^►(▻a+◅)+◄b
漏洞原因：There is a nested quantifier node a+ in (a+)+.
------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
